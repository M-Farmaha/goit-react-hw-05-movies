{"version":3,"file":"static/js/415.24cbe27c.chunk.js","mappings":"qIAAA,SAASA,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,CAEe,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,EACnE,CAEAjB,OAAMkB,EACR,GACF,CACF,C,uJClCMC,EAAW,gCACXC,EAAM,mCAECC,EAAqB,6BAAG,iGAC7BC,EAD6B,UACpBH,EADoB,sCACkBC,GADlB,SAEZG,MAAMD,GAFM,YAE7BE,EAF6B,QAItBC,GAJsB,iCAKdD,EAASE,OALK,cAK3BC,EAL2B,yBAM1BA,GAN0B,yBAQTH,EAASE,OARA,cAQ3BE,EAR2B,OAS3B,IAAIC,MAAMD,GATiB,4CAAH,qDAarBE,EAAmB,6BAAG,WAAMC,GAAN,oFAC3BT,EAD2B,UAClBH,EADkB,iCACeC,EADf,4DACsEW,EADtE,oBAEVR,MAAMD,GAFI,YAE3BE,EAF2B,QAIpBC,GAJoB,iCAKZD,EAASE,OALG,cAKzBC,EALyB,yBAMxBA,GANwB,yBAQPH,EAASE,OARF,cAQzBE,EARyB,OASzB,IAAIC,MAAMD,GATe,4CAAH,sDAanBI,EAAkB,6BAAG,WAAMC,GAAN,oFAC1BX,EAD0B,UACjBH,EADiB,kBACCc,EADD,oBACoBb,EADpB,4BAETG,MAAMD,GAFG,YAE1BE,EAF0B,QAInBC,GAJmB,iCAKXD,EAASE,OALE,cAKxBC,EALwB,yBAMvBA,GANuB,yBAQNH,EAASE,OARH,cAQxBE,EARwB,OASxB,IAAIC,MAAMD,GATc,4CAAH,sDAalBM,EAAW,6BAAG,WAAMD,GAAN,oFACnBX,EADmB,UACVH,EADU,kBACQc,EADR,4BACmCb,EADnC,4BAEFG,MAAMD,GAFJ,YAEnBE,EAFmB,QAIZC,GAJY,iCAKJD,EAASE,OALL,cAKjBC,EALiB,yBAMhBA,GANgB,yBAQCH,EAASE,OARV,cAQjBE,EARiB,OASjB,IAAIC,MAAMD,GATO,4CAAH,sDAaXO,EAAc,6BAAG,WAAMF,GAAN,oFACtBX,EADsB,UACbH,EADa,kBACKc,EADL,4BACgCb,EADhC,4BAELG,MAAMD,GAFD,YAEtBE,EAFsB,QAIfC,GAJe,iCAKPD,EAASE,OALF,cAKpBC,EALoB,yBAMnBA,GANmB,yBAQFH,EAASE,OARP,cAQpBE,EARoB,OASpB,IAAIC,MAAMD,GATU,4CAAH,qD,sFClB3B,UAhCa,WACX,OAA4CQ,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACMC,GAAWC,EAAAA,EAAAA,MAUjB,OARAC,EAAAA,EAAAA,YAAU,YACRpB,EAAAA,EAAAA,MACGZ,MAAK,SAAAe,GACJc,EAAkBd,EAASkB,QAC5B,IACAC,OAAM,SAAA1B,GAAG,OAAI2B,QAAQC,IAAI5B,EAAhB,GACb,GAAE,IAGyB,IAA1BoB,EAAeS,SACb,iCACE,SAAC,KAAD,8BACA,SAAC,KAAD,UACGT,EAAeU,KAAI,SAAAC,GAClB,OACE,yBACE,SAAC,KAAD,CAAYC,GAAE,iBAAYD,EAAME,IAAMC,MAAOZ,EAA7C,SACGS,EAAMI,SAFFJ,EAAME,GAMlB,QAKV,C","sources":["../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","fetchRequest.js","pages/Home.jsx"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = 'ef24936cd708c9aa0029dc0cfa81df25';\n\nexport const trendingMoviesRequest = async () => {\n  const url = `${BASE_URL}trending/movie/day?api_key=${KEY}`;\n  const response = await fetch(url);\n\n  if (response.ok) {\n    const data = await response.json();\n    return data;\n  } else {\n    const errorData = await response.json();\n    throw new Error(errorData);\n  }\n};\n\nexport const searchMoviesRequest = async query => {\n  const url = `${BASE_URL}/search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${query}&page=1`;\n  const response = await fetch(url);\n\n  if (response.ok) {\n    const data = await response.json();\n    return data;\n  } else {\n    const errorData = await response.json();\n    throw new Error(errorData);\n  }\n};\n\nexport const movieDetailRequest = async movieId => {\n  const url = `${BASE_URL}/movie/${movieId}?api_key=${KEY}&language=en-US`;\n  const response = await fetch(url);\n\n  if (response.ok) {\n    const data = await response.json();\n    return data;\n  } else {\n    const errorData = await response.json();\n    throw new Error(errorData);\n  }\n};\n\nexport const castRequest = async movieId => {\n  const url = `${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}&language=en-US`;\n  const response = await fetch(url);\n\n  if (response.ok) {\n    const data = await response.json();\n    return data;\n  } else {\n    const errorData = await response.json();\n    throw new Error(errorData);\n  }\n};\n\nexport const reviewsRequest = async movieId => {\n  const url = `${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}&language=en-US`;\n  const response = await fetch(url);\n\n  if (response.ok) {\n    const data = await response.json();\n    return data;\n  } else {\n    const errorData = await response.json();\n    throw new Error(errorData);\n  }\n};\n","import { useState, useEffect } from 'react';\nimport { trendingMoviesRequest } from 'fetchRequest';\nimport { LinkStyled, HomeList, HomeTitle } from 'components/styled-components';\nimport { useLocation } from 'react-router-dom';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    trendingMoviesRequest()\n      .then(response => {\n        setTrendingMovies(response.results);\n      })\n      .catch(err => console.log(err));\n  }, []);\n\n  return (\n    trendingMovies.length !== 0 && (\n      <>\n        <HomeTitle>Trending today</HomeTitle>\n        <HomeList>\n          {trendingMovies.map(movie => {\n            return (\n              <li key={movie.id}>\n                <LinkStyled to={`movies/${movie.id}`} state={location}>\n                  {movie.title}\n                </LinkStyled>\n              </li>\n            );\n          })}\n        </HomeList>\n      </>\n    )\n  );\n};\n\nexport default Home;\n"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","BASE_URL","KEY","trendingMoviesRequest","url","fetch","response","ok","json","data","errorData","Error","searchMoviesRequest","query","movieDetailRequest","movieId","castRequest","reviewsRequest","useState","trendingMovies","setTrendingMovies","location","useLocation","useEffect","results","catch","console","log","length","map","movie","to","id","state","title"],"sourceRoot":""}